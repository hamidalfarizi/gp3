<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Helper\Sample;

class Update_massal extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Update_model');
        // $this->load->model('Kategori_model');

        // cek user login
        check_login();
    }

    /*
     * Listing of siswa
     */
    function index()
    {
        $data['_view'] = 'siswa/update_index';

        $this->load->view('template/header', $data);
        $this->load->view('template/sidebar', $data);
        $this->load->view('siswa/update_index', $data);
        $this->load->view('template/footer', $data);
    }

    function download_template_siswa()
    {
        force_download('downloads/template_siswa.xlsx', null);
    }

    function download_template_update_kelas()
    {
        force_download('downloads/template_update_kelas.xlsx', null);
    }

    function download_template_update_rayon()
    {
        force_download('downloads/template_update_rayon.xlsx', null);
    }

    function download_template_update_nisn()
    {
        force_download('downloads/template_update_nisn.xlsx', null);
    }

    function download_template_update_idsiswa()
    {
        force_download('downloads/template_update_idsiswa.xlsx', null);
    }


     /*
    * upload kelas siswa 
    */
    function upload_kelas()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'siswa';

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data = array('upload_data' => $this->upload->data());

            $helper = new Sample();
            $inputFileName = 'uploads/'.$data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();


            for ($i=6;  $i <= count($sheetData); $i++){
                    $stambuk = $sheetData[$i]['B'];    
                    $kelasbaru = $sheetData[$i]['E'];

            $this->Update_model->update_kelas_siswa($stambuk,$kelasbaru);
            };

            // // hitung jumlah data yang di upload
            $jumlahData = $highestRow - 5;     
           
            $this->session->set_flashdata('berhasil_upload', 'Anda berhasil mengunggah <strong>' . $jumlahData .'  data siswa.</strong>');           
            unlink($inputFileName);
            redirect('update_massal');
        }
    }

    /*
    * upload rayon siswa 
    */
    function upload_rayon()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'siswa';

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data = array('upload_data' => $this->upload->data());

            $helper = new Sample();
            $inputFileName = 'uploads/'.$data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();


            for ($i=6;  $i <= count($sheetData); $i++){
                    $stambuk = $sheetData[$i]['B'];    
                    $rayonbaru = $sheetData[$i]['E'];

            $this->Update_model->update_rayon_siswa($stambuk,$rayonbaru);
            };

            // // hitung jumlah data yang di upload
            $jumlahData = $highestRow - 5;     
           
            $this->session->set_flashdata('berhasil_upload', 'Anda berhasil mengunggah <strong>' . $jumlahData .'  data siswa.</strong>');           
            unlink($inputFileName);
            redirect('update_massal');
        }
    }

    /*
    * upload nisn siswa 
    */
    function upload_nisn()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'siswa';

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data = array('upload_data' => $this->upload->data());

            $helper = new Sample();
            $inputFileName = 'uploads/'.$data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();


            for ($i=6;  $i <= count($sheetData); $i++){
                    $stambuk = $sheetData[$i]['B'];    
                    $nisn = $sheetData[$i]['E'];

            $this->Update_model->update_nisn_siswa($stambuk,$nisn);
            };

            // // hitung jumlah data yang di upload
            $jumlahData = $highestRow - 5;     
           
            $this->session->set_flashdata('berhasil_upload', 'Anda berhasil mengunggah <strong>' . $jumlahData .'  data siswa.</strong>');           
            unlink($inputFileName);
            redirect('update_massal');
        }
    }

    /*
    * upload id siswa 
    */
    function upload_idsiswa()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'siswa';

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data = array('upload_data' => $this->upload->data());

            $helper = new Sample();
            $inputFileName = 'uploads/'.$data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();


            for ($i=6;  $i <= count($sheetData); $i++){
                    $stambuk = $sheetData[$i]['B'];    
                    $id_siswa = $sheetData[$i]['E'];

            $this->Update_model->update_id_siswa($stambuk,$id_siswa);
            };

            // // hitung jumlah data yang di upload
            $jumlahData = $highestRow - 5;     
           
            $this->session->set_flashdata('berhasil_upload', 'Anda berhasil mengunggah <strong>' . $jumlahData .'  data siswa.</strong>');           
            unlink($inputFileName);
            redirect('update_massal');
        }
    }

    /*
    * upload id siswa 
    */
    function upload_notelp_siswa()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'siswa';

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data = array('upload_data' => $this->upload->data());

            $helper = new Sample();
            $inputFileName = 'uploads/'.$data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();


            for ($i=6;  $i <= count($sheetData); $i++){
                    $stambuk = $sheetData[$i]['B'];    
                    $telpayah = $sheetData[$i]['E'];
                    $telpibu = $sheetData[$i]['F'];
                    $telpwali = $sheetData[$i]['G'];

            $this->Update_model->update_notelp_siswa($stambuk, $telpayah, $telpibu, $telpwali);
            };

            // // hitung jumlah data yang di upload
            $jumlahData = $highestRow - 5;     
           
            $this->session->set_flashdata('berhasil_upload', 'Anda berhasil mengunggah <strong>' . $jumlahData .'  data siswa.</strong>');           
            unlink($inputFileName);
            redirect('update_massal');
        }
    }

    /*
    * template upload kelas siswa
    */
    function template_upload_kelas()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'siswa';

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data = array('upload_data' => $this->upload->data());

            $helper = new Sample();
            $inputFileName = 'uploads/'.$data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();


            for ($i=6;  $i <= count($sheetData); $i++){
                    $stambuk = $sheetData[$i]['B'];    
                    $kelasbaru = $sheetData[$i]['E'];

            $this->Siswa_model->update_kelas_siswa($stambuk,$kelasbaru);
            };

            // // hitung jumlah data yang di upload
            $jumlahData = $highestRow - 5;     
           
            $this->session->set_flashdata('berhasil_upload', 'Anda berhasil mengunggah <strong>' . $jumlahData .'  data siswa.</strong>');           
            unlink($inputFileName);
            redirect('siswa');
        }
    }
 
}
